#!/usr/bin/env bash
# rncap 1.2.0
# Capitalizes each filename in current working directory

set -euo pipefail  # Fail on any error
Gre='\e[1;32m' Red='\e[1;31m' Mag='\e[1;35m' Yel='\e[1;33m' Blu='\e[1;34m' Rst='\e[0m'

check_version() {
    LocalVer=$(sed -n '2p' "$0" | awk '{print $NF}')
    LatestVer=$(curl -ks "https://que.one/scripts/$(basename $0)" 2>/dev/null | sed -n '2p' | awk '{print $NF}')
    if [[ -n "$LatestVer" && "$LocalVer" < "$LatestVer" ]]; then
        printf "${Yel}==> Warning: Running older ${Rst}${Red}v${LocalVer}${Rst} ${Yel}version "
        printf "of this script. Please update to latest${Rst} ${Gre}v${LatestVer}${Rst}\n"
    fi
}

check_version
MSG="Capitalize every file in CWD? Y/N "
read -p "$MSG" -n 1 && [[ ! $REPLY =~ ^[Yy]$ ]] && printf "\nAborted.\n" && exit 1
printf "\n\n"

[[ -z "`which python`" ]] && echo "Error. Requires python!" && exit 1

OS=`uname | tr [A-Z] [a-z]`

for OLDNAME in * ; do
   NEWNAME=`python -c "import sys ; print sys.argv[1].title()" "$OLDNAME"`
   # GNU SED version
   #NEWNAME2=`echo "$OLDNAME/" | sed -r 's/\b\(.\)/\U\1/g'`
   #NEWNAME2=${NEWNAME2%/}
   [[ "$OS" = "linux" ]]  && mv -nuv "$OLDNAME" "$NEWNAME" 
   [[ "$OS" = "darwin" ]] && mv "$OLDNAME" "$NEWNAME" && echo "'$OLDNAME' -> '$NEWNAME'"
done
 
printf "\n"
exit 0
